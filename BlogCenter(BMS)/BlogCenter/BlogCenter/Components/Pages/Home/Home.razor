@page "/"
@using BlogCenter.Blazor.Services.Role
@rendermode InteractiveServer
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager _navigationManager

@* <div class="animation-demo">
    <div class="text-1 fw-bold">BlogCenter</div>
    <div class="text-2">
        <span>Blog Management System.</span>
    </div>
</div> *@
<div class="vh-100">

    <div class="text-center">
        <MudGrid>
            <MudItem xs="12" sm="12" md="12" lg="12" xl="12" xxl="12" Class="">
                <MudText Typo="Typo.h5" Color="Color.Primary"><span class="fw-bold">BlogCenter</span>(Blog Management System)</MudText>
                <MudButton OnClick="NavigateToLoginPage" Variant="Variant.Filled" Color="Color.Primary" Class="my-1">Login</MudButton>
                <MudButton OnClick="NavigateToLoginPage" Variant="Variant.Filled" Color="Color.Primary" Class="my-1">Register</MudButton>
            </MudItem>
        </MudGrid>
    </div>

</div>



@code {

    public void NavigateToLoginPage()
    {
        _navigationManager.NavigateTo("/login");
    }
    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.IsInRole("admin") && user.Identity.IsAuthenticated)
        {
            _navigationManager.NavigateTo("/admin/dashboard");
        }
        else if (user.IsInRole("user") && user.Identity.IsAuthenticated)
        {
            _navigationManager.NavigateTo("/user/dashboard");
        }
    }
}

